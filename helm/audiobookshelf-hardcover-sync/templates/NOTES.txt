1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "audiobookshelf-hardcover-sync.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "audiobookshelf-hardcover-sync.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "audiobookshelf-hardcover-sync.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "audiobookshelf-hardcover-sync.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the sync status and logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "audiobookshelf-hardcover-sync.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -f

3. Health check endpoint:
   The application provides a health check endpoint at /healthz

4. Configuration:
   {{- if not .Values.secrets.audiobookshelf.url }}
   WARNING: Audiobookshelf URL is not configured. Please update the secret with your Audiobookshelf instance URL.
   {{- end }}
   {{- if not .Values.secrets.audiobookshelf.token }}
   WARNING: Audiobookshelf token is not configured. Please update the secret with your Audiobookshelf API token.
   {{- end }}
   {{- if not .Values.secrets.hardcover.token }}
   WARNING: Hardcover token is not configured. Please update the secret with your Hardcover API token.
   {{- end }}

   To update secrets:
   kubectl create secret generic {{ include "audiobookshelf-hardcover-sync.fullname" . }} \
     --from-literal=audiobookshelf-url="https://your-audiobookshelf-instance.com" \
     --from-literal=audiobookshelf-token="your-audiobookshelf-token" \
     --from-literal=hardcover-token="your-hardcover-token" \
     --namespace {{ .Release.Namespace }} \
     --dry-run=client -o yaml | kubectl apply -f -

5. Persistence:
   {{- if .Values.persistence.enabled }}
   Data persistence is enabled. Your sync state and cache will be preserved across pod restarts.
   {{- else }}
   Data persistence is disabled. Sync state and cache will be lost when pods are restarted.
   Consider enabling persistence for production deployments.
   {{- end }}

For more information, visit: https://github.com/brendamour/audiobookshelf-hardcover-sync
