apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
  labels:
    {{- include "audiobookshelf-hardcover-sync.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "audiobookshelf-hardcover-sync.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "audiobookshelf-hardcover-sync.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "audiobookshelf-hardcover-sync.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          env:
            # Server configuration
            - name: PORT
              value: {{ .Values.config.server.port | quote }}
            - name: SHUTDOWN_TIMEOUT
              value: {{ .Values.config.server.shutdownTimeout | quote }}
            
            # Rate limiting configuration
            - name: RATE_LIMIT_RATE
              value: {{ .Values.config.rateLimit.rate | quote }}
            - name: RATE_LIMIT_BURST
              value: {{ .Values.config.rateLimit.burst | quote }}
            - name: RATE_LIMIT_MAX_CONCURRENT
              value: {{ .Values.config.rateLimit.maxConcurrent | quote }}
            
            # Logging configuration
            - name: LOG_LEVEL
              value: {{ .Values.config.logging.level | quote }}
            - name: LOG_FORMAT
              value: {{ .Values.config.logging.format | quote }}
            
            # Application settings
            - name: SYNC_INTERVAL
              value: {{ .Values.config.app.syncInterval | quote }}
            - name: MINIMUM_PROGRESS
              value: {{ .Values.config.app.minimumProgress | quote }}
            - name: SYNC_WANT_TO_READ
              value: {{ .Values.config.app.syncWantToRead | quote }}
            - name: SYNC_OWNED
              value: {{ .Values.config.app.syncOwned | quote }}
            - name: DRY_RUN
              value: {{ .Values.config.app.dryRun | quote }}
            {{- if .Values.config.app.testBookFilter }}
            - name: TEST_BOOK_FILTER
              value: {{ .Values.config.app.testBookFilter | quote }}
            {{- end }}
            {{- if .Values.config.app.testBookLimit }}
            - name: TEST_BOOK_LIMIT
              value: {{ .Values.config.app.testBookLimit | quote }}
            {{- end }}
            
            # Sync configuration
            - name: SYNC_INCREMENTAL
              value: {{ .Values.config.sync.incremental | quote }}
            - name: SYNC_STATE_FILE
              value: {{ .Values.config.sync.stateFile | quote }}
            - name: SYNC_MIN_CHANGE_THRESHOLD
              value: {{ .Values.config.sync.minChangeThreshold | quote }}
            - name: SYNC_INCLUDE_EBOOKS
              value: {{ .Values.config.sync.includeEbooks | quote }}
            {{- if .Values.config.sync.libraries.include }}
            - name: SYNC_LIBRARIES_INCLUDE
              value: {{ join "," .Values.config.sync.libraries.include | quote }}
            {{- end }}
            {{- if .Values.config.sync.libraries.exclude }}
            - name: SYNC_LIBRARIES_EXCLUDE
              value: {{ join "," .Values.config.sync.libraries.exclude | quote }}
            {{- end }}
            
            # Paths configuration
            - name: CACHE_DIR
              value: {{ .Values.config.paths.cacheDir | quote }}
            - name: MISMATCH_OUTPUT_DIR
              value: {{ .Values.config.paths.mismatchOutputDir | quote }}
            
            # Secrets
            - name: AUDIOBOOKSHELF_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
                  key: audiobookshelf-url
            - name: AUDIOBOOKSHELF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
                  key: audiobookshelf-token
            - name: HARDCOVER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
                  key: hardcover-token
            
            # Authentication configuration (v3.0.0+)
            {{- if .Values.authentication.enabled }}
            - name: AUTH_ENABLED
              value: {{ .Values.authentication.enabled | quote }}
            {{- if .Values.authentication.sessionSecret }}
            - name: AUTH_SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
                  key: auth-session-secret
            {{- end }}
            {{- if .Values.authentication.cookieName }}
            - name: AUTH_COOKIE_NAME
              value: {{ .Values.authentication.cookieName | quote }}
            {{- end }}
            {{- if .Values.authentication.defaultAdmin.username }}
            - name: AUTH_DEFAULT_ADMIN_USERNAME
              value: {{ .Values.authentication.defaultAdmin.username | quote }}
            {{- end }}
            {{- if .Values.authentication.defaultAdmin.email }}
            - name: AUTH_DEFAULT_ADMIN_EMAIL
              value: {{ .Values.authentication.defaultAdmin.email | quote }}
            {{- end }}
            {{- if .Values.authentication.defaultAdmin.password }}
            - name: AUTH_DEFAULT_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
                  key: auth-default-admin-password
            {{- end }}
            {{- if .Values.authentication.keycloak.issuer }}
            - name: KEYCLOAK_ISSUER
              value: {{ .Values.authentication.keycloak.issuer | quote }}
            {{- end }}
            {{- if .Values.authentication.keycloak.clientId }}
            - name: KEYCLOAK_CLIENT_ID
              value: {{ .Values.authentication.keycloak.clientId | quote }}
            {{- end }}
            {{- if .Values.authentication.keycloak.clientSecret }}
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiobookshelf-hardcover-sync.fullname" . }}
                  key: keycloak-client-secret
            {{- end }}
            {{- if .Values.authentication.keycloak.redirectUri }}
            - name: KEYCLOAK_REDIRECT_URI
              value: {{ .Values.authentication.keycloak.redirectUri | quote }}
            {{- end }}
            {{- if .Values.authentication.keycloak.scopes }}
            - name: KEYCLOAK_SCOPES
              value: {{ .Values.authentication.keycloak.scopes | quote }}
            {{- end }}
            {{- if .Values.authentication.keycloak.roleClaim }}
            - name: KEYCLOAK_ROLE_CLAIM
              value: {{ .Values.authentication.keycloak.roleClaim | quote }}
            {{- end }}
            {{- end }}
            
            # Database configuration (v3.1.0+)
            {{- if .Values.database.type }}
            - name: DATABASE_TYPE
              value: {{ .Values.database.type | quote }}
            {{- end }}
            
            {{- if eq .Values.database.type "sqlite" }}
            {{- if .Values.database.sqlite.path }}
            - name: DATABASE_PATH
              value: {{ .Values.database.sqlite.path | quote }}
            {{- end }}
            {{- end }}
            
            {{- if eq .Values.database.type "postgresql" }}
            - name: DATABASE_HOST
              value: {{ .Values.database.postgresql.host | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.database.postgresql.port | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.database.postgresql.database | quote }}
            - name: DATABASE_USER
              value: {{ .Values.database.postgresql.username | quote }}
            {{- if .Values.database.postgresql.password }}
            - name: DATABASE_PASSWORD
              value: {{ .Values.database.postgresql.password | quote }}
            {{- else if .Values.database.existingSecret }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: DATABASE_PASSWORD
            {{- end }}
            - name: DATABASE_SSL_MODE
              value: {{ .Values.database.postgresql.sslMode | quote }}
            {{- end }}
            
            {{- if or (eq .Values.database.type "mysql") (eq .Values.database.type "mariadb") }}
            - name: DATABASE_HOST
              value: {{ .Values.database.mysql.host | quote }}
            - name: DATABASE_PORT
              value: {{ .Values.database.mysql.port | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.database.mysql.database | quote }}
            - name: DATABASE_USER
              value: {{ .Values.database.mysql.username | quote }}
            {{- if .Values.database.mysql.password }}
            - name: DATABASE_PASSWORD
              value: {{ .Values.database.mysql.password | quote }}
            {{- else if .Values.database.existingSecret }}
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: DATABASE_PASSWORD
            {{- end }}
            {{- end }}
            
            {{- if and .Values.database.connectionPool (ne .Values.database.type "sqlite") }}
            - name: DATABASE_MAX_OPEN_CONNS
              value: {{ .Values.database.connectionPool.maxOpenConns | quote }}
            - name: DATABASE_MAX_IDLE_CONNS
              value: {{ .Values.database.connectionPool.maxIdleConns | quote }}
            - name: DATABASE_CONN_MAX_LIFETIME
              value: {{ .Values.database.connectionPool.connMaxLifetime | quote }}
            {{- end }}
            
            # Additional environment variables
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: data-persistent
              mountPath: /app/data
            {{- end }}
      volumes:
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data-persistent
          persistentVolumeClaim:
            claimName: {{ include "audiobookshelf-hardcover-sync.fullname" . }}-data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
