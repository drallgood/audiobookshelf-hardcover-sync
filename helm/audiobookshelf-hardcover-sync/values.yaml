# Default values for audiobookshelf-hardcover-sync.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/drallgood/audiobookshelf-hardcover-sync
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

# Web UI Configuration
# The application includes a modern web interface for multi-user management
# Access the web UI at: http://<service-url>:<port>/
# Features include:
# - Multi-user management (create, edit, delete users)
# - Authentication (login/logout with local or Keycloak/OIDC)
# - Real-time sync status monitoring
# - Individual user sync control
# - Sync configuration management per user
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # For authentication-enabled deployments, consider:
    # nginx.ingress.kubernetes.io/session-cookie-name: "abs-hc-sync-session"
    # nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
  hosts:
    - host: audiobookshelf-hardcover-sync.local
      paths:
        - path: /
          pathType: Prefix
          # Serves the web UI and API endpoints:
          # / - Main web interface
          # /api/users - User management API
          # /api/sync - Sync control API
          # /auth/* - Authentication endpoints (if enabled)
  tls: []
  #  - secretName: audiobookshelf-hardcover-sync-tls
  #    hosts:
  #      - audiobookshelf-hardcover-sync.local

resources:
  # Default resource limits and requests for security compliance
  # These can be overridden by users as needed for their environment
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30

readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: cache
    emptyDir: {}
  - name: mismatches
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: cache
    mountPath: /app/cache
  - name: mismatches
    mountPath: /app/mismatches

nodeSelector: {}

tolerations: []

affinity: {}

# Database Configuration
# Supports SQLite (default), PostgreSQL, MySQL/MariaDB with automatic fallback
database:
  # Database type: sqlite, postgresql, mysql, mariadb
  type: sqlite
  
  # SQLite configuration (default)
  sqlite:
    # Custom path for SQLite database file (optional)
    # If not specified, uses default: /app/data/database.db
    path: ""
  
  # PostgreSQL configuration
  postgresql:
    host: "localhost"
    port: 5432
    database: "audiobookshelf_sync"
    username: "sync_user"
    # Password should be set via existingSecret or password field
    password: ""
    sslMode: "prefer"  # disable, allow, prefer, require, verify-ca, verify-full
    
  # MySQL/MariaDB configuration  
  mysql:
    host: "localhost"
    port: 3306
    database: "audiobookshelf_sync"
    username: "sync_user"
    # Password should be set via existingSecret or password field
    password: ""
    
  # Connection pool settings (for PostgreSQL and MySQL)
  connectionPool:
    maxOpenConns: 25
    maxIdleConns: 5
    connMaxLifetime: 60  # minutes
    
  # Use existing secret for database credentials
  # Secret should contain keys: DATABASE_PASSWORD
  # For PostgreSQL/MySQL: DATABASE_USER, DATABASE_PASSWORD
  existingSecret: ""
  
  # Create a secret with database credentials (not recommended for production)
  createSecret: false

# Persistence configuration
persistence:
  enabled: true
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi
  # existingClaim: ""

# Authentication configuration
authentication:
  # Enable authentication system
  enabled: false
  
  # Session configuration
  session:
    # Secret for signing cookies (will be auto-generated if empty)
    # For production, set this via secret or environment variable
    secret: ""
    # Cookie name for sessions
    cookieName: "audiobookshelf-sync-session"
    # Session max age in seconds (24 hours)
    maxAge: 86400
    # Secure cookie (set to true for HTTPS)
    secure: false
    # HTTP only cookie
    httpOnly: true
    # SameSite cookie policy
    sameSite: "Lax"
  
  # Default admin user configuration
  defaultAdmin:
    # Default admin username
    username: "admin"
    # Default admin email
    email: "admin@localhost"
    # Default admin password (use secret for production)
    password: ""
  
  # Keycloak/OIDC configuration
  keycloak:
    # Enable Keycloak authentication
    enabled: false
    # OIDC issuer URL
    issuer: ""
    # OIDC client ID
    clientId: ""
    # OIDC client secret (use secret for production)
    clientSecret: ""
    # Redirect URI
    redirectUri: ""
    # OIDC scopes
    scopes: "openid profile email"
    # Role claim name
    roleClaim: "realm_access.roles"

# Application configuration
config:
  # Server configuration
  server:
    port: "8080"
    shutdownTimeout: "10s"

  # Rate limiting configuration
  rateLimit:
    rate: "1500ms"        # Minimum time between requests
    burst: 2              # Maximum number of requests in a burst
    maxConcurrent: 3      # Maximum number of concurrent requests

  # Logging configuration
  logging:
    level: "info"         # debug, info, warn, error, fatal, panic
    format: "json"        # json or console

  # Application settings
  app:
    syncInterval: "1h"
    minimumProgress: 0.01
    syncWantToRead: true
    syncOwned: true
    dryRun: false
    testBookFilter: ""
    testBookLimit: 0

  # Sync configuration
  sync:
    incremental: true
    stateFile: "/app/data/sync_state.json"
    minChangeThreshold: 60
    libraries:
      include: []         # List of library names/IDs to sync (if specified, only these will be synced)
      exclude: []         # List of library names/IDs to exclude from sync

  # Paths configuration
  paths:
    cacheDir: "/app/cache"
    mismatchOutputDir: "/app/mismatches"

# Secrets configuration
secrets:
  # Audiobookshelf configuration
  audiobookshelf:
    # URL of your Audiobookshelf instance
    url: ""
    # API token for Audiobookshelf
    token: ""

  # Hardcover configuration
  hardcover:
    # API token for Hardcover
    token: ""



# Environment variables (will override config values)
env: []
  # - name: DEBUG
  #   value: "true"
  # - name: LOG_LEVEL
  #   value: "debug"

# Environment variables from secrets/configmaps
envFrom: []
  # - secretRef:
  #     name: audiobookshelf-hardcover-sync-secrets
  # - configMapRef:
  #     name: audiobookshelf-hardcover-sync-config
