# Default values for audiobookshelf-hardcover-sync.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/drallgood/audiobookshelf-hardcover-sync
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: audiobookshelf-hardcover-sync.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: audiobookshelf-hardcover-sync-tls
  #    hosts:
  #      - audiobookshelf-hardcover-sync.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: cache
    emptyDir: {}
  - name: mismatches
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: cache
    mountPath: /app/cache
  - name: mismatches
    mountPath: /app/mismatches

nodeSelector: {}

tolerations: []

affinity: {}

# Persistence configuration
persistence:
  enabled: false
  # existingClaim: ""
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}

# Application configuration
config:
  # Server configuration
  server:
    port: "8080"
    shutdownTimeout: "10s"

  # Rate limiting configuration
  rateLimit:
    rate: "1500ms"        # Minimum time between requests
    burst: 2              # Maximum number of requests in a burst
    maxConcurrent: 3      # Maximum number of concurrent requests

  # Logging configuration
  logging:
    level: "info"         # debug, info, warn, error, fatal, panic
    format: "json"        # json or console

  # Application settings
  app:
    syncInterval: "1h"
    minimumProgress: 0.01
    syncWantToRead: true
    syncOwned: true
    dryRun: false
    testBookFilter: ""
    testBookLimit: 0

  # Sync configuration
  sync:
    incremental: true
    stateFile: "/app/data/sync_state.json"
    minChangeThreshold: 60
    libraries:
      include: []         # List of library names/IDs to sync (if specified, only these will be synced)
      exclude: []         # List of library names/IDs to exclude from sync

  # Paths configuration
  paths:
    cacheDir: "/app/cache"
    mismatchOutputDir: "/app/mismatches"

# Secrets configuration
secrets:
  # Audiobookshelf configuration
  audiobookshelf:
    # URL of your Audiobookshelf instance
    url: ""
    # API token for Audiobookshelf
    token: ""

  # Hardcover configuration
  hardcover:
    # API token for Hardcover
    token: ""

# Environment variables (will override config values)
env: []
  # - name: DEBUG
  #   value: "true"
  # - name: LOG_LEVEL
  #   value: "debug"

# Environment variables from secrets/configmaps
envFrom: []
  # - secretRef:
  #     name: audiobookshelf-hardcover-sync-secrets
  # - configMapRef:
  #     name: audiobookshelf-hardcover-sync-config
