name: Go

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.yaml'
      - '**/*.yml'
      - '**/Dockerfile'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.yaml'
      - '**/*.yml'
      - '**/Dockerfile'

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22.x' ]
        os: [ ubuntu-latest ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run linters
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        golangci-lint run --timeout 5m -v

    - name: Run tests with coverage
      run: |
        # Run tests with coverage but don't fail if coverage is low
        # The coverage report is still generated and can be viewed locally with: go tool cover -html=coverage.txt
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
