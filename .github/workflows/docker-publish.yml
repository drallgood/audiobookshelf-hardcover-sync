name: Publish Docker image

on:
  push:
    branches:
      - main
  release:
    types: [published, prereleased]

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        run: go test -v ./...

      - name: Test version injection build
        run: |
          cd cmd/audiobookshelf-hardcover-sync
          go build -ldflags="-X main.version=test-build-$(git rev-parse --short HEAD)" -o /tmp/test-main .

      - name: Verify version injection
        run: |
          VERSION=$(/tmp/test-main --version)
          echo "Built version: $VERSION"
          if [[ "$VERSION" == *"test-build-"* ]]; then
            echo "✅ Version injection working correctly"
          else
            echo "❌ Version injection failed"
            echo "Expected output to contain 'test-build-', but got: $VERSION"
            exit 1
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/drallgood/audiobookshelf-hardcover-sync

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Determine version
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            # For tags, use the tag name as version
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            # For main branch, use commit SHA with beta prefix
            VERSION="beta-${GITHUB_SHA:0:7}"
          else
            # For other branches, use branch name with commit SHA
            VERSION="dev-${GITHUB_REF#refs/heads/}-${GITHUB_SHA:0:7}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Determined version: ${VERSION}"

      - name: Build and push Docker image (multi-arch)
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
          tags: |
            ghcr.io/drallgood/audiobookshelf-hardcover-sync:${{ github.sha }}
            ${{ steps.meta.outputs.tags }}
            ${{ startsWith(github.ref, 'refs/tags/v') && 'ghcr.io/drallgood/audiobookshelf-hardcover-sync:latest' || '' }}
            ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'ghcr.io/drallgood/audiobookshelf-hardcover-sync:beta' || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
